#!/usr/bin/env python
# Purepursuit Planner configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t, str_t
#from local_planner_limits import add_generic_localplanner_params

gen = ParameterGenerator()

# This unusual line allows to reuse existing parameter definitions
# that concern all localplanners
#add_generic_localplanner_params(gen)

gen.add("load_vmax", double_t, 0, "max linear speed in loaded state", 0.8, 0.2, 2.0)
gen.add("noload_vmax", double_t, 0, "max linear speed in loaded state", 0.8, 0.2, 2.0)
gen.add("arb_const_v", double_t, 0, "bound cmd_vel with odometry feedback", 0.22, 0.1, 2.0)
gen.add("load_wmax", double_t, 0, "max angular speed in loaded state", 0.3, 0.2, 0.8)
gen.add("noload_wmax", double_t, 0, "max linear speed in loaded state", 0.5, 0.2, 1.0)
gen.add("load_acc_x", double_t, 0, "max linear speed in loaded state", 0.4, 0.05, 0.5)
gen.add("noload_acc_x", double_t, 0, "max linear speed in loaded state", 0.4, 0.05, 0.8)
# Adding safety acceleration x for overwrite profiling when obstacle is detected
gen.add("safety_acc_x", double_t, 0, "profiling max linear speed to halt on obstacle detection", 0.6, 0.0, 1.0) 
gen.add("load_acc_w", double_t, 0, "max linear speed in loaded state", 0.1, 0.05, 0.8)
gen.add("noload_acc_w", double_t, 0, "max linear speed in loaded state", 0.2, 0.1, 0.8)
gen.add("vmin", double_t, 0, "min linear speed", 0.15, 0.05, 0.3)
gen.add("wmin", double_t, 0, "min angular speed", 0.1, 0.05, 0.3)
gen.add("min_lookahead", double_t, 0, "minimum distance at robot can look at the global plan", 1.0, 0.4, 1.5)
gen.add("max_lookahead", double_t, 0, "maximum distance at robot can look at the global plan", 2.5, 1.5, 5.0)
gen.add("kla", double_t, 0, "scaling factor of lookahead based the robot velocity", 1.0, 0.7, 4.0)
gen.add("kct", double_t, 0, "scaling factor of lookahead based the robot cross track error", 1.0, 0.7, 2.0)
gen.add("lat_acc", double_t, 0, "controls velocity at curves", 1.2, 0.01, 5.0)
gen.add("safety_distance", double_t, 0, "stopping distance from an obstacle", 2.0, 0.5, 5.0)
gen.add("cross_track_warn", double_t, 0, "cross_track_distance at which robot velocity reduced to min velocity", 0.15, 0.1, 0.5)
gen.add("cross_track_error", double_t, 0, "cross_track_distance at which robot stops", 0.5, 0.25, 2.0)
gen.add("xy_goal_tolerance", double_t, 0, "xy goal tolerance", 0.1, 0.0, 2.0)
gen.add("yaw_goal_tolerance", double_t, 0, "yaw goal tolerance", 0.1, 0.0, 2.0)
gen.add("change_config", bool_t, 0, "apply the new config in system", False)
gen.add("restore_defaults", bool_t, 0, "Restore to the original configuration.", False)
gen.add("robot_type", str_t, 0, "Enter robot type mag500", "mag500")


exit(gen.generate("pp_local_planner", "pp_local_planner", "PPLocalPlanner"))
